// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: x2.proto

#ifndef PROTOBUF_x2_2eproto__INCLUDED
#define PROTOBUF_x2_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)

namespace x2 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_x2_2eproto();
void protobuf_AssignDesc_x2_2eproto();
void protobuf_ShutdownFile_x2_2eproto();

class Attributes;
class Box;
class Capability;
class Capture;
class CaptureFrameMessage;
class CaptureTarget;
class CharArray;
class Command;
class Config;
class DBResult;
class Enable;
class FloatArray;
class FloatMatrix;
class FrameMessage;
class Image;
class InfoMessage;
class LogLevel;
class Mode;
class Point;
class Points;
class Response;
class SmartFrameMessage;
class Status;
class Target;
class Threshold;
class Version;

enum Status_RunStatus {
  Status_RunStatus_Uknown = 0,
  Status_RunStatus_Uninit = 1,
  Status_RunStatus_Init = 2,
  Status_RunStatus_Normal = 3,
  Status_RunStatus_Abnormal = 4,
  Status_RunStatus_Update = 5,
  Status_RunStatus_Status_RunStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Status_RunStatus_Status_RunStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Status_RunStatus_IsValid(int value);
const Status_RunStatus Status_RunStatus_RunStatus_MIN = Status_RunStatus_Uknown;
const Status_RunStatus Status_RunStatus_RunStatus_MAX = Status_RunStatus_Update;
const int Status_RunStatus_RunStatus_ARRAYSIZE = Status_RunStatus_RunStatus_MAX + 1;

enum Command_Order {
  Command_Order_Unkown = 0,
  Command_Order_StartX2 = 1,
  Command_Order_StopX2 = 2,
  Command_Order_UpdateX2 = 3,
  Command_Order_Command_Order_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Command_Order_Command_Order_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Command_Order_IsValid(int value);
const Command_Order Command_Order_Order_MIN = Command_Order_Unkown;
const Command_Order Command_Order_Order_MAX = Command_Order_UpdateX2;
const int Command_Order_Order_ARRAYSIZE = Command_Order_Order_MAX + 1;

enum Response_Ack {
  Response_Ack_Uknown = 0,
  Response_Ack_Success = 1,
  Response_Ack_Fail = 2,
  Response_Ack_Response_Ack_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Response_Ack_Response_Ack_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Response_Ack_IsValid(int value);
const Response_Ack Response_Ack_Ack_MIN = Response_Ack_Uknown;
const Response_Ack Response_Ack_Ack_MAX = Response_Ack_Fail;
const int Response_Ack_Ack_ARRAYSIZE = Response_Ack_Ack_MAX + 1;

enum LogLevel_Level {
  LogLevel_Level_X2_DEBUG = 0,
  LogLevel_Level_X2_INFO = 1,
  LogLevel_Level_X2_NOTICE = 2,
  LogLevel_Level_X2_WARN = 3,
  LogLevel_Level_X2_ERROR = 4,
  LogLevel_Level_X2_FATAL = 5,
  LogLevel_Level_X2_NONE = 6,
  LogLevel_Level_LogLevel_Level_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LogLevel_Level_LogLevel_Level_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LogLevel_Level_IsValid(int value);
const LogLevel_Level LogLevel_Level_Level_MIN = LogLevel_Level_X2_DEBUG;
const LogLevel_Level LogLevel_Level_Level_MAX = LogLevel_Level_X2_NONE;
const int LogLevel_Level_Level_ARRAYSIZE = LogLevel_Level_Level_MAX + 1;

// ===================================================================

class CharArray : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.CharArray) */ {
 public:
  CharArray();
  virtual ~CharArray();

  CharArray(const CharArray& from);

  inline CharArray& operator=(const CharArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const CharArray& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CharArray* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CharArray* other);

  // implements Message ----------------------------------------------

  inline CharArray* New() const { return New(NULL); }

  CharArray* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CharArray& from);
  void MergeFrom(const CharArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CharArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional bytes array_ = 2;
  void clear_array_();
  static const int kArrayFieldNumber = 2;
  const ::std::string& array_() const;
  void set_array_(const ::std::string& value);
  void set_array_(const char* value);
  void set_array_(const void* value, size_t size);
  ::std::string* mutable_array_();
  ::std::string* release_array_();
  void set_allocated_array_(::std::string* array_);

  // @@protoc_insertion_point(class_scope:x2.CharArray)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::internal::ArenaStringPtr array__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static CharArray* default_instance_;
};
// -------------------------------------------------------------------

class FloatArray : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.FloatArray) */ {
 public:
  FloatArray();
  virtual ~FloatArray();

  FloatArray(const FloatArray& from);

  inline FloatArray& operator=(const FloatArray& from) {
    CopyFrom(from);
    return *this;
  }

  static const FloatArray& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FloatArray* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FloatArray* other);

  // implements Message ----------------------------------------------

  inline FloatArray* New() const { return New(NULL); }

  FloatArray* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FloatArray& from);
  void MergeFrom(const FloatArray& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FloatArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // repeated float value_ = 2;
  int value__size() const;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  float value_(int index) const;
  void set_value_(int index, float value);
  void add_value_(float value);
  const ::google::protobuf::RepeatedField< float >&
      value_() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_value_();

  // @@protoc_insertion_point(class_scope:x2.FloatArray)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::RepeatedField< float > value__;
  mutable int _value__cached_byte_size_;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static FloatArray* default_instance_;
};
// -------------------------------------------------------------------

class FloatMatrix : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.FloatMatrix) */ {
 public:
  FloatMatrix();
  virtual ~FloatMatrix();

  FloatMatrix(const FloatMatrix& from);

  inline FloatMatrix& operator=(const FloatMatrix& from) {
    CopyFrom(from);
    return *this;
  }

  static const FloatMatrix& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FloatMatrix* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FloatMatrix* other);

  // implements Message ----------------------------------------------

  inline FloatMatrix* New() const { return New(NULL); }

  FloatMatrix* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FloatMatrix& from);
  void MergeFrom(const FloatMatrix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FloatMatrix* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // repeated .x2.FloatArray arrays_ = 2;
  int arrays__size() const;
  void clear_arrays_();
  static const int kArraysFieldNumber = 2;
  const ::x2::FloatArray& arrays_(int index) const;
  ::x2::FloatArray* mutable_arrays_(int index);
  ::x2::FloatArray* add_arrays_();
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
      mutable_arrays_();
  const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
      arrays_() const;

  // @@protoc_insertion_point(class_scope:x2.FloatMatrix)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray > arrays__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static FloatMatrix* default_instance_;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const Point& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Point* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x_ = 1;
  void clear_x_();
  static const int kXFieldNumber = 1;
  float x_() const;
  void set_x_(float value);

  // optional float y_ = 2;
  void clear_y_();
  static const int kYFieldNumber = 2;
  float y_() const;
  void set_y_(float value);

  // optional float score_ = 3;
  void clear_score_();
  static const int kScoreFieldNumber = 3;
  float score_() const;
  void set_score_(float value);

  // @@protoc_insertion_point(class_scope:x2.Point)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  float x__;
  float y__;
  float score__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class Points : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Points) */ {
 public:
  Points();
  virtual ~Points();

  Points(const Points& from);

  inline Points& operator=(const Points& from) {
    CopyFrom(from);
    return *this;
  }

  static const Points& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Points* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Points* other);

  // implements Message ----------------------------------------------

  inline Points* New() const { return New(NULL); }

  Points* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Points& from);
  void MergeFrom(const Points& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Points* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // repeated .x2.Point points_ = 2;
  int points__size() const;
  void clear_points_();
  static const int kPointsFieldNumber = 2;
  const ::x2::Point& points_(int index) const;
  ::x2::Point* mutable_points_(int index);
  ::x2::Point* add_points_();
  ::google::protobuf::RepeatedPtrField< ::x2::Point >*
      mutable_points_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Point >&
      points_() const;

  // @@protoc_insertion_point(class_scope:x2.Points)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::RepeatedPtrField< ::x2::Point > points__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Points* default_instance_;
};
// -------------------------------------------------------------------

class Box : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Box) */ {
 public:
  Box();
  virtual ~Box();

  Box(const Box& from);

  inline Box& operator=(const Box& from) {
    CopyFrom(from);
    return *this;
  }

  static const Box& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Box* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Box* other);

  // implements Message ----------------------------------------------

  inline Box* New() const { return New(NULL); }

  Box* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Box& from);
  void MergeFrom(const Box& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Box* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional .x2.Point top_left_ = 2;
  bool has_top_left_() const;
  void clear_top_left_();
  static const int kTopLeftFieldNumber = 2;
  const ::x2::Point& top_left_() const;
  ::x2::Point* mutable_top_left_();
  ::x2::Point* release_top_left_();
  void set_allocated_top_left_(::x2::Point* top_left_);

  // optional .x2.Point bottom_right_ = 3;
  bool has_bottom_right_() const;
  void clear_bottom_right_();
  static const int kBottomRightFieldNumber = 3;
  const ::x2::Point& bottom_right_() const;
  ::x2::Point* mutable_bottom_right_();
  ::x2::Point* release_bottom_right_();
  void set_allocated_bottom_right_(::x2::Point* bottom_right_);

  // @@protoc_insertion_point(class_scope:x2.Box)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::x2::Point* top_left__;
  ::x2::Point* bottom_right__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Box* default_instance_;
};
// -------------------------------------------------------------------

class Attributes : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Attributes) */ {
 public:
  Attributes();
  virtual ~Attributes();

  Attributes(const Attributes& from);

  inline Attributes& operator=(const Attributes& from) {
    CopyFrom(from);
    return *this;
  }

  static const Attributes& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Attributes* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Attributes* other);

  // implements Message ----------------------------------------------

  inline Attributes* New() const { return New(NULL); }

  Attributes* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Attributes& from);
  void MergeFrom(const Attributes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Attributes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional float value_ = 2;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  float value_() const;
  void set_value_(float value);

  // optional float score_ = 3;
  void clear_score_();
  static const int kScoreFieldNumber = 3;
  float score_() const;
  void set_score_(float value);

  // @@protoc_insertion_point(class_scope:x2.Attributes)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  float value__;
  float score__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Attributes* default_instance_;
};
// -------------------------------------------------------------------

class DBResult : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.DBResult) */ {
 public:
  DBResult();
  virtual ~DBResult();

  DBResult(const DBResult& from);

  inline DBResult& operator=(const DBResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const DBResult& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DBResult* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DBResult* other);

  // implements Message ----------------------------------------------

  inline DBResult* New() const { return New(NULL); }

  DBResult* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DBResult& from);
  void MergeFrom(const DBResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DBResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string db_type_ = 1;
  void clear_db_type_();
  static const int kDbTypeFieldNumber = 1;
  const ::std::string& db_type_() const;
  void set_db_type_(const ::std::string& value);
  void set_db_type_(const char* value);
  void set_db_type_(const char* value, size_t size);
  ::std::string* mutable_db_type_();
  ::std::string* release_db_type_();
  void set_allocated_db_type_(::std::string* db_type_);

  // optional string match_id_ = 2;
  void clear_match_id_();
  static const int kMatchIdFieldNumber = 2;
  const ::std::string& match_id_() const;
  void set_match_id_(const ::std::string& value);
  void set_match_id_(const char* value);
  void set_match_id_(const char* value, size_t size);
  ::std::string* mutable_match_id_();
  ::std::string* release_match_id_();
  void set_allocated_match_id_(::std::string* match_id_);

  // optional float distance_ = 3;
  void clear_distance_();
  static const int kDistanceFieldNumber = 3;
  float distance_() const;
  void set_distance_(float value);

  // optional float similarity_ = 4;
  void clear_similarity_();
  static const int kSimilarityFieldNumber = 4;
  float similarity_() const;
  void set_similarity_(float value);

  // @@protoc_insertion_point(class_scope:x2.DBResult)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr db_type__;
  ::google::protobuf::internal::ArenaStringPtr match_id__;
  float distance__;
  float similarity__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static DBResult* default_instance_;
};
// -------------------------------------------------------------------

class Image : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Image) */ {
 public:
  Image();
  virtual ~Image();

  Image(const Image& from);

  inline Image& operator=(const Image& from) {
    CopyFrom(from);
    return *this;
  }

  static const Image& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Image* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Image* other);

  // implements Message ----------------------------------------------

  inline Image* New() const { return New(NULL); }

  Image* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Image& from);
  void MergeFrom(const Image& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Image* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes buf_ = 1;
  void clear_buf_();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf_() const;
  void set_buf_(const ::std::string& value);
  void set_buf_(const char* value);
  void set_buf_(const void* value, size_t size);
  ::std::string* mutable_buf_();
  ::std::string* release_buf_();
  void set_allocated_buf_(::std::string* buf_);

  // optional string type_ = 2;
  void clear_type_();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint32 width_ = 3;
  void clear_width_();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width_() const;
  void set_width_(::google::protobuf::uint32 value);

  // optional uint32 height_ = 4;
  void clear_height_();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height_() const;
  void set_height_(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:x2.Image)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr buf__;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint32 width__;
  ::google::protobuf::uint32 height__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Image* default_instance_;
};
// -------------------------------------------------------------------

class Enable : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Enable) */ {
 public:
  Enable();
  virtual ~Enable();

  Enable(const Enable& from);

  inline Enable& operator=(const Enable& from) {
    CopyFrom(from);
    return *this;
  }

  static const Enable& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Enable* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Enable* other);

  // implements Message ----------------------------------------------

  inline Enable* New() const { return New(NULL); }

  Enable* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Enable& from);
  void MergeFrom(const Enable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Enable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional bool value_ = 2;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  bool value_() const;
  void set_value_(bool value);

  // @@protoc_insertion_point(class_scope:x2.Enable)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  bool value__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Enable* default_instance_;
};
// -------------------------------------------------------------------

class Threshold : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Threshold) */ {
 public:
  Threshold();
  virtual ~Threshold();

  Threshold(const Threshold& from);

  inline Threshold& operator=(const Threshold& from) {
    CopyFrom(from);
    return *this;
  }

  static const Threshold& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Threshold* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Threshold* other);

  // implements Message ----------------------------------------------

  inline Threshold* New() const { return New(NULL); }

  Threshold* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Threshold& from);
  void MergeFrom(const Threshold& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Threshold* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional float value_ = 2;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  float value_() const;
  void set_value_(float value);

  // @@protoc_insertion_point(class_scope:x2.Threshold)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  float value__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Threshold* default_instance_;
};
// -------------------------------------------------------------------

class Mode : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Mode) */ {
 public:
  Mode();
  virtual ~Mode();

  Mode(const Mode& from);

  inline Mode& operator=(const Mode& from) {
    CopyFrom(from);
    return *this;
  }

  static const Mode& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Mode* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Mode* other);

  // implements Message ----------------------------------------------

  inline Mode* New() const { return New(NULL); }

  Mode* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Mode& from);
  void MergeFrom(const Mode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Mode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional string value_ = 2;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  const ::std::string& value_() const;
  void set_value_(const ::std::string& value);
  void set_value_(const char* value);
  void set_value_(const char* value, size_t size);
  ::std::string* mutable_value_();
  ::std::string* release_value_();
  void set_allocated_value_(::std::string* value_);

  // @@protoc_insertion_point(class_scope:x2.Mode)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::internal::ArenaStringPtr value__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Mode* default_instance_;
};
// -------------------------------------------------------------------

class Target : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Target) */ {
 public:
  Target();
  virtual ~Target();

  Target(const Target& from);

  inline Target& operator=(const Target& from) {
    CopyFrom(from);
    return *this;
  }

  static const Target& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Target* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Target* other);

  // implements Message ----------------------------------------------

  inline Target* New() const { return New(NULL); }

  Target* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Target& from);
  void MergeFrom(const Target& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint64 track_id_ = 2;
  void clear_track_id_();
  static const int kTrackIdFieldNumber = 2;
  ::google::protobuf::uint64 track_id_() const;
  void set_track_id_(::google::protobuf::uint64 value);

  // repeated .x2.Box boxes_ = 3;
  int boxes__size() const;
  void clear_boxes_();
  static const int kBoxesFieldNumber = 3;
  const ::x2::Box& boxes_(int index) const;
  ::x2::Box* mutable_boxes_(int index);
  ::x2::Box* add_boxes_();
  ::google::protobuf::RepeatedPtrField< ::x2::Box >*
      mutable_boxes_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
      boxes_() const;

  // repeated .x2.Attributes attributes_ = 4;
  int attributes__size() const;
  void clear_attributes_();
  static const int kAttributesFieldNumber = 4;
  const ::x2::Attributes& attributes_(int index) const;
  ::x2::Attributes* mutable_attributes_(int index);
  ::x2::Attributes* add_attributes_();
  ::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
      mutable_attributes_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
      attributes_() const;

  // repeated .x2.Points points_ = 5;
  int points__size() const;
  void clear_points_();
  static const int kPointsFieldNumber = 5;
  const ::x2::Points& points_(int index) const;
  ::x2::Points* mutable_points_(int index);
  ::x2::Points* add_points_();
  ::google::protobuf::RepeatedPtrField< ::x2::Points >*
      mutable_points_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
      points_() const;

  // repeated .x2.FloatArray float_arrays_ = 6;
  int float_arrays__size() const;
  void clear_float_arrays_();
  static const int kFloatArraysFieldNumber = 6;
  const ::x2::FloatArray& float_arrays_(int index) const;
  ::x2::FloatArray* mutable_float_arrays_(int index);
  ::x2::FloatArray* add_float_arrays_();
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
      mutable_float_arrays_();
  const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
      float_arrays_() const;

  // repeated .x2.FloatMatrix float_matrixs_ = 7;
  int float_matrixs__size() const;
  void clear_float_matrixs_();
  static const int kFloatMatrixsFieldNumber = 7;
  const ::x2::FloatMatrix& float_matrixs_(int index) const;
  ::x2::FloatMatrix* mutable_float_matrixs_(int index);
  ::x2::FloatMatrix* add_float_matrixs_();
  ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >*
      mutable_float_matrixs_();
  const ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >&
      float_matrixs_() const;

  // @@protoc_insertion_point(class_scope:x2.Target)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 track_id__;
  ::google::protobuf::RepeatedPtrField< ::x2::Box > boxes__;
  ::google::protobuf::RepeatedPtrField< ::x2::Attributes > attributes__;
  ::google::protobuf::RepeatedPtrField< ::x2::Points > points__;
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray > float_arrays__;
  ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix > float_matrixs__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Target* default_instance_;
};
// -------------------------------------------------------------------

class SmartFrameMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.SmartFrameMessage) */ {
 public:
  SmartFrameMessage();
  virtual ~SmartFrameMessage();

  SmartFrameMessage(const SmartFrameMessage& from);

  inline SmartFrameMessage& operator=(const SmartFrameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const SmartFrameMessage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SmartFrameMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SmartFrameMessage* other);

  // implements Message ----------------------------------------------

  inline SmartFrameMessage* New() const { return New(NULL); }

  SmartFrameMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SmartFrameMessage& from);
  void MergeFrom(const SmartFrameMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SmartFrameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 timestamp_ = 1;
  void clear_timestamp_();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint64 timestamp_() const;
  void set_timestamp_(::google::protobuf::uint64 value);

  // optional uint32 error_code_ = 2;
  void clear_error_code_();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::uint32 error_code_() const;
  void set_error_code_(::google::protobuf::uint32 value);

  // repeated .x2.Target targets_ = 3;
  int targets__size() const;
  void clear_targets_();
  static const int kTargetsFieldNumber = 3;
  const ::x2::Target& targets_(int index) const;
  ::x2::Target* mutable_targets_(int index);
  ::x2::Target* add_targets_();
  ::google::protobuf::RepeatedPtrField< ::x2::Target >*
      mutable_targets_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Target >&
      targets_() const;

  // @@protoc_insertion_point(class_scope:x2.SmartFrameMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::uint64 timestamp__;
  ::google::protobuf::RepeatedPtrField< ::x2::Target > targets__;
  ::google::protobuf::uint32 error_code__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static SmartFrameMessage* default_instance_;
};
// -------------------------------------------------------------------

class Capture : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Capture) */ {
 public:
  Capture();
  virtual ~Capture();

  Capture(const Capture& from);

  inline Capture& operator=(const Capture& from) {
    CopyFrom(from);
    return *this;
  }

  static const Capture& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Capture* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Capture* other);

  // implements Message ----------------------------------------------

  inline Capture* New() const { return New(NULL); }

  Capture* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Capture& from);
  void MergeFrom(const Capture& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Capture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional fixed64 timestamp_ = 2;
  void clear_timestamp_();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_() const;
  void set_timestamp_(::google::protobuf::uint64 value);

  // optional .x2.Image img_ = 3;
  bool has_img_() const;
  void clear_img_();
  static const int kImgFieldNumber = 3;
  const ::x2::Image& img_() const;
  ::x2::Image* mutable_img_();
  ::x2::Image* release_img_();
  void set_allocated_img_(::x2::Image* img_);

  // repeated .x2.Box boxes_ = 4;
  int boxes__size() const;
  void clear_boxes_();
  static const int kBoxesFieldNumber = 4;
  const ::x2::Box& boxes_(int index) const;
  ::x2::Box* mutable_boxes_(int index);
  ::x2::Box* add_boxes_();
  ::google::protobuf::RepeatedPtrField< ::x2::Box >*
      mutable_boxes_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
      boxes_() const;

  // repeated .x2.Attributes attributes_ = 5;
  int attributes__size() const;
  void clear_attributes_();
  static const int kAttributesFieldNumber = 5;
  const ::x2::Attributes& attributes_(int index) const;
  ::x2::Attributes* mutable_attributes_(int index);
  ::x2::Attributes* add_attributes_();
  ::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
      mutable_attributes_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
      attributes_() const;

  // repeated .x2.Points points_ = 6;
  int points__size() const;
  void clear_points_();
  static const int kPointsFieldNumber = 6;
  const ::x2::Points& points_(int index) const;
  ::x2::Points* mutable_points_(int index);
  ::x2::Points* add_points_();
  ::google::protobuf::RepeatedPtrField< ::x2::Points >*
      mutable_points_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
      points_() const;

  // repeated .x2.FloatArray float_arrays_ = 7;
  int float_arrays__size() const;
  void clear_float_arrays_();
  static const int kFloatArraysFieldNumber = 7;
  const ::x2::FloatArray& float_arrays_(int index) const;
  ::x2::FloatArray* mutable_float_arrays_(int index);
  ::x2::FloatArray* add_float_arrays_();
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
      mutable_float_arrays_();
  const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
      float_arrays_() const;

  // repeated .x2.CharArray char_arrays_ = 8;
  int char_arrays__size() const;
  void clear_char_arrays_();
  static const int kCharArraysFieldNumber = 8;
  const ::x2::CharArray& char_arrays_(int index) const;
  ::x2::CharArray* mutable_char_arrays_(int index);
  ::x2::CharArray* add_char_arrays_();
  ::google::protobuf::RepeatedPtrField< ::x2::CharArray >*
      mutable_char_arrays_();
  const ::google::protobuf::RepeatedPtrField< ::x2::CharArray >&
      char_arrays_() const;

  // @@protoc_insertion_point(class_scope:x2.Capture)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 timestamp__;
  ::x2::Image* img__;
  ::google::protobuf::RepeatedPtrField< ::x2::Box > boxes__;
  ::google::protobuf::RepeatedPtrField< ::x2::Attributes > attributes__;
  ::google::protobuf::RepeatedPtrField< ::x2::Points > points__;
  ::google::protobuf::RepeatedPtrField< ::x2::FloatArray > float_arrays__;
  ::google::protobuf::RepeatedPtrField< ::x2::CharArray > char_arrays__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Capture* default_instance_;
};
// -------------------------------------------------------------------

class CaptureTarget : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.CaptureTarget) */ {
 public:
  CaptureTarget();
  virtual ~CaptureTarget();

  CaptureTarget(const CaptureTarget& from);

  inline CaptureTarget& operator=(const CaptureTarget& from) {
    CopyFrom(from);
    return *this;
  }

  static const CaptureTarget& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CaptureTarget* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CaptureTarget* other);

  // implements Message ----------------------------------------------

  inline CaptureTarget* New() const { return New(NULL); }

  CaptureTarget* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CaptureTarget& from);
  void MergeFrom(const CaptureTarget& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CaptureTarget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint64 track_id_ = 2;
  void clear_track_id_();
  static const int kTrackIdFieldNumber = 2;
  ::google::protobuf::uint64 track_id_() const;
  void set_track_id_(::google::protobuf::uint64 value);

  // repeated .x2.Capture captures_ = 3;
  int captures__size() const;
  void clear_captures_();
  static const int kCapturesFieldNumber = 3;
  const ::x2::Capture& captures_(int index) const;
  ::x2::Capture* mutable_captures_(int index);
  ::x2::Capture* add_captures_();
  ::google::protobuf::RepeatedPtrField< ::x2::Capture >*
      mutable_captures_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Capture >&
      captures_() const;

  // repeated .x2.DBResult db_results_ = 4;
  int db_results__size() const;
  void clear_db_results_();
  static const int kDbResultsFieldNumber = 4;
  const ::x2::DBResult& db_results_(int index) const;
  ::x2::DBResult* mutable_db_results_(int index);
  ::x2::DBResult* add_db_results_();
  ::google::protobuf::RepeatedPtrField< ::x2::DBResult >*
      mutable_db_results_();
  const ::google::protobuf::RepeatedPtrField< ::x2::DBResult >&
      db_results_() const;

  // @@protoc_insertion_point(class_scope:x2.CaptureTarget)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 track_id__;
  ::google::protobuf::RepeatedPtrField< ::x2::Capture > captures__;
  ::google::protobuf::RepeatedPtrField< ::x2::DBResult > db_results__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static CaptureTarget* default_instance_;
};
// -------------------------------------------------------------------

class CaptureFrameMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.CaptureFrameMessage) */ {
 public:
  CaptureFrameMessage();
  virtual ~CaptureFrameMessage();

  CaptureFrameMessage(const CaptureFrameMessage& from);

  inline CaptureFrameMessage& operator=(const CaptureFrameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const CaptureFrameMessage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CaptureFrameMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CaptureFrameMessage* other);

  // implements Message ----------------------------------------------

  inline CaptureFrameMessage* New() const { return New(NULL); }

  CaptureFrameMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CaptureFrameMessage& from);
  void MergeFrom(const CaptureFrameMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CaptureFrameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .x2.CaptureTarget targets_ = 1;
  int targets__size() const;
  void clear_targets_();
  static const int kTargetsFieldNumber = 1;
  const ::x2::CaptureTarget& targets_(int index) const;
  ::x2::CaptureTarget* mutable_targets_(int index);
  ::x2::CaptureTarget* add_targets_();
  ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >*
      mutable_targets_();
  const ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >&
      targets_() const;

  // @@protoc_insertion_point(class_scope:x2.CaptureFrameMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget > targets__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static CaptureFrameMessage* default_instance_;
};
// -------------------------------------------------------------------

class FrameMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.FrameMessage) */ {
 public:
  FrameMessage();
  virtual ~FrameMessage();

  FrameMessage(const FrameMessage& from);

  inline FrameMessage& operator=(const FrameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const FrameMessage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FrameMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FrameMessage* other);

  // implements Message ----------------------------------------------

  inline FrameMessage* New() const { return New(NULL); }

  FrameMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FrameMessage& from);
  void MergeFrom(const FrameMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FrameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .x2.SmartFrameMessage smart_msg_ = 1;
  bool has_smart_msg_() const;
  void clear_smart_msg_();
  static const int kSmartMsgFieldNumber = 1;
  const ::x2::SmartFrameMessage& smart_msg_() const;
  ::x2::SmartFrameMessage* mutable_smart_msg_();
  ::x2::SmartFrameMessage* release_smart_msg_();
  void set_allocated_smart_msg_(::x2::SmartFrameMessage* smart_msg_);

  // optional .x2.CaptureFrameMessage capture_msg_ = 2;
  bool has_capture_msg_() const;
  void clear_capture_msg_();
  static const int kCaptureMsgFieldNumber = 2;
  const ::x2::CaptureFrameMessage& capture_msg_() const;
  ::x2::CaptureFrameMessage* mutable_capture_msg_();
  ::x2::CaptureFrameMessage* release_capture_msg_();
  void set_allocated_capture_msg_(::x2::CaptureFrameMessage* capture_msg_);

  // @@protoc_insertion_point(class_scope:x2.FrameMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::x2::SmartFrameMessage* smart_msg__;
  ::x2::CaptureFrameMessage* capture_msg__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static FrameMessage* default_instance_;
};
// -------------------------------------------------------------------

class Capability : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Capability) */ {
 public:
  Capability();
  virtual ~Capability();

  Capability(const Capability& from);

  inline Capability& operator=(const Capability& from) {
    CopyFrom(from);
    return *this;
  }

  static const Capability& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Capability* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Capability* other);

  // implements Message ----------------------------------------------

  inline Capability* New() const { return New(NULL); }

  Capability* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Capability& from);
  void MergeFrom(const Capability& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Capability* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional .x2.Enable cap_array_ = 2;
  bool has_cap_array_() const;
  void clear_cap_array_();
  static const int kCapArrayFieldNumber = 2;
  const ::x2::Enable& cap_array_() const;
  ::x2::Enable* mutable_cap_array_();
  ::x2::Enable* release_cap_array_();
  void set_allocated_cap_array_(::x2::Enable* cap_array_);

  // @@protoc_insertion_point(class_scope:x2.Capability)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::x2::Enable* cap_array__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Capability* default_instance_;
};
// -------------------------------------------------------------------

class Version : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Version) */ {
 public:
  Version();
  virtual ~Version();

  Version(const Version& from);

  inline Version& operator=(const Version& from) {
    CopyFrom(from);
    return *this;
  }

  static const Version& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Version* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Version* other);

  // implements Message ----------------------------------------------

  inline Version* New() const { return New(NULL); }

  Version* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Version& from);
  void MergeFrom(const Version& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Version* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional string value_ = 2;
  void clear_value_();
  static const int kValueFieldNumber = 2;
  const ::std::string& value_() const;
  void set_value_(const ::std::string& value);
  void set_value_(const char* value);
  void set_value_(const char* value, size_t size);
  ::std::string* mutable_value_();
  ::std::string* release_value_();
  void set_allocated_value_(::std::string* value_);

  // @@protoc_insertion_point(class_scope:x2.Version)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::internal::ArenaStringPtr value__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Version* default_instance_;
};
// -------------------------------------------------------------------

class Config : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Config) */ {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  static const Config& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Config* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  inline Config* New() const { return New(NULL); }

  Config* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // repeated .x2.Threshold threshold_ = 2;
  int threshold__size() const;
  void clear_threshold_();
  static const int kThresholdFieldNumber = 2;
  const ::x2::Threshold& threshold_(int index) const;
  ::x2::Threshold* mutable_threshold_(int index);
  ::x2::Threshold* add_threshold_();
  ::google::protobuf::RepeatedPtrField< ::x2::Threshold >*
      mutable_threshold_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Threshold >&
      threshold_() const;

  // repeated .x2.Mode mode_ = 3;
  int mode__size() const;
  void clear_mode_();
  static const int kModeFieldNumber = 3;
  const ::x2::Mode& mode_(int index) const;
  ::x2::Mode* mutable_mode_(int index);
  ::x2::Mode* add_mode_();
  ::google::protobuf::RepeatedPtrField< ::x2::Mode >*
      mutable_mode_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Mode >&
      mode_() const;

  // repeated .x2.Box shield_ = 4;
  int shield__size() const;
  void clear_shield_();
  static const int kShieldFieldNumber = 4;
  const ::x2::Box& shield_(int index) const;
  ::x2::Box* mutable_shield_(int index);
  ::x2::Box* add_shield_();
  ::google::protobuf::RepeatedPtrField< ::x2::Box >*
      mutable_shield_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
      shield_() const;

  // @@protoc_insertion_point(class_scope:x2.Config)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::RepeatedPtrField< ::x2::Threshold > threshold__;
  ::google::protobuf::RepeatedPtrField< ::x2::Mode > mode__;
  ::google::protobuf::RepeatedPtrField< ::x2::Box > shield__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Config* default_instance_;
};
// -------------------------------------------------------------------

class Status : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Status) */ {
 public:
  Status();
  virtual ~Status();

  Status(const Status& from);

  inline Status& operator=(const Status& from) {
    CopyFrom(from);
    return *this;
  }

  static const Status& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Status* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Status* other);

  // implements Message ----------------------------------------------

  inline Status* New() const { return New(NULL); }

  Status* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Status& from);
  void MergeFrom(const Status& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Status_RunStatus RunStatus;
  static const RunStatus Uknown =
    Status_RunStatus_Uknown;
  static const RunStatus Uninit =
    Status_RunStatus_Uninit;
  static const RunStatus Init =
    Status_RunStatus_Init;
  static const RunStatus Normal =
    Status_RunStatus_Normal;
  static const RunStatus Abnormal =
    Status_RunStatus_Abnormal;
  static const RunStatus Update =
    Status_RunStatus_Update;
  static inline bool RunStatus_IsValid(int value) {
    return Status_RunStatus_IsValid(value);
  }
  static const RunStatus RunStatus_MIN =
    Status_RunStatus_RunStatus_MIN;
  static const RunStatus RunStatus_MAX =
    Status_RunStatus_RunStatus_MAX;
  static const int RunStatus_ARRAYSIZE =
    Status_RunStatus_RunStatus_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint64 timestamp_ = 2;
  void clear_timestamp_();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_() const;
  void set_timestamp_(::google::protobuf::uint64 value);

  // optional .x2.Status.RunStatus run_status_ = 3;
  void clear_run_status_();
  static const int kRunStatusFieldNumber = 3;
  ::x2::Status_RunStatus run_status_() const;
  void set_run_status_(::x2::Status_RunStatus value);

  // @@protoc_insertion_point(class_scope:x2.Status)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 timestamp__;
  int run_status__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Status* default_instance_;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  static const Command& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Command* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  inline Command* New() const { return New(NULL); }

  Command* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Command_Order Order;
  static const Order Unkown =
    Command_Order_Unkown;
  static const Order StartX2 =
    Command_Order_StartX2;
  static const Order StopX2 =
    Command_Order_StopX2;
  static const Order UpdateX2 =
    Command_Order_UpdateX2;
  static inline bool Order_IsValid(int value) {
    return Command_Order_IsValid(value);
  }
  static const Order Order_MIN =
    Command_Order_Order_MIN;
  static const Order Order_MAX =
    Command_Order_Order_MAX;
  static const int Order_ARRAYSIZE =
    Command_Order_Order_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint64 timestamp_ = 2;
  void clear_timestamp_();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_() const;
  void set_timestamp_(::google::protobuf::uint64 value);

  // optional .x2.Command.Order order_ = 3;
  void clear_order_();
  static const int kOrderFieldNumber = 3;
  ::x2::Command_Order order_() const;
  void set_order_(::x2::Command_Order value);

  // @@protoc_insertion_point(class_scope:x2.Command)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 timestamp__;
  int order__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  static const Response& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const Response* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef Response_Ack Ack;
  static const Ack Uknown =
    Response_Ack_Uknown;
  static const Ack Success =
    Response_Ack_Success;
  static const Ack Fail =
    Response_Ack_Fail;
  static inline bool Ack_IsValid(int value) {
    return Response_Ack_IsValid(value);
  }
  static const Ack Ack_MIN =
    Response_Ack_Ack_MIN;
  static const Ack Ack_MAX =
    Response_Ack_Ack_MAX;
  static const int Ack_ARRAYSIZE =
    Response_Ack_Ack_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional uint64 timestamp_ = 2;
  void clear_timestamp_();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint64 timestamp_() const;
  void set_timestamp_(::google::protobuf::uint64 value);

  // optional .x2.Response.Ack ack_ = 3;
  void clear_ack_();
  static const int kAckFieldNumber = 3;
  ::x2::Response_Ack ack_() const;
  void set_ack_(::x2::Response_Ack value);

  // @@protoc_insertion_point(class_scope:x2.Response)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  ::google::protobuf::uint64 timestamp__;
  int ack__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class LogLevel : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.LogLevel) */ {
 public:
  LogLevel();
  virtual ~LogLevel();

  LogLevel(const LogLevel& from);

  inline LogLevel& operator=(const LogLevel& from) {
    CopyFrom(from);
    return *this;
  }

  static const LogLevel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LogLevel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LogLevel* other);

  // implements Message ----------------------------------------------

  inline LogLevel* New() const { return New(NULL); }

  LogLevel* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LogLevel& from);
  void MergeFrom(const LogLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  typedef LogLevel_Level Level;
  static const Level X2_DEBUG =
    LogLevel_Level_X2_DEBUG;
  static const Level X2_INFO =
    LogLevel_Level_X2_INFO;
  static const Level X2_NOTICE =
    LogLevel_Level_X2_NOTICE;
  static const Level X2_WARN =
    LogLevel_Level_X2_WARN;
  static const Level X2_ERROR =
    LogLevel_Level_X2_ERROR;
  static const Level X2_FATAL =
    LogLevel_Level_X2_FATAL;
  static const Level X2_NONE =
    LogLevel_Level_X2_NONE;
  static inline bool Level_IsValid(int value) {
    return LogLevel_Level_IsValid(value);
  }
  static const Level Level_MIN =
    LogLevel_Level_Level_MIN;
  static const Level Level_MAX =
    LogLevel_Level_Level_MAX;
  static const int Level_ARRAYSIZE =
    LogLevel_Level_Level_ARRAYSIZE;

  // accessors -------------------------------------------------------

  // optional string type_ = 1;
  void clear_type_();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type_() const;
  void set_type_(const ::std::string& value);
  void set_type_(const char* value);
  void set_type_(const char* value, size_t size);
  ::std::string* mutable_type_();
  ::std::string* release_type_();
  void set_allocated_type_(::std::string* type_);

  // optional .x2.LogLevel.Level level_ = 2;
  void clear_level_();
  static const int kLevelFieldNumber = 2;
  ::x2::LogLevel_Level level_() const;
  void set_level_(::x2::LogLevel_Level value);

  // @@protoc_insertion_point(class_scope:x2.LogLevel)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type__;
  int level__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static LogLevel* default_instance_;
};
// -------------------------------------------------------------------

class InfoMessage : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:x2.InfoMessage) */ {
 public:
  InfoMessage();
  virtual ~InfoMessage();

  InfoMessage(const InfoMessage& from);

  inline InfoMessage& operator=(const InfoMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const InfoMessage& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const InfoMessage* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(InfoMessage* other);

  // implements Message ----------------------------------------------

  inline InfoMessage* New() const { return New(NULL); }

  InfoMessage* New(::google::protobuf::Arena* arena) const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const InfoMessage& from);
  void MergeFrom(const InfoMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InfoMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _arena_ptr_;
  }
  inline ::google::protobuf::Arena* MaybeArenaPtr() const {
    return _arena_ptr_;
  }
  public:

  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .x2.Status status_ = 1;
  bool has_status_() const;
  void clear_status_();
  static const int kStatusFieldNumber = 1;
  const ::x2::Status& status_() const;
  ::x2::Status* mutable_status_();
  ::x2::Status* release_status_();
  void set_allocated_status_(::x2::Status* status_);

  // optional .x2.Command command_ = 2;
  bool has_command_() const;
  void clear_command_();
  static const int kCommandFieldNumber = 2;
  const ::x2::Command& command_() const;
  ::x2::Command* mutable_command_();
  ::x2::Command* release_command_();
  void set_allocated_command_(::x2::Command* command_);

  // optional .x2.LogLevel loglevel_ = 3;
  bool has_loglevel_() const;
  void clear_loglevel_();
  static const int kLoglevelFieldNumber = 3;
  const ::x2::LogLevel& loglevel_() const;
  ::x2::LogLevel* mutable_loglevel_();
  ::x2::LogLevel* release_loglevel_();
  void set_allocated_loglevel_(::x2::LogLevel* loglevel_);

  // optional .x2.Response response_ = 4;
  bool has_response_() const;
  void clear_response_();
  static const int kResponseFieldNumber = 4;
  const ::x2::Response& response_() const;
  ::x2::Response* mutable_response_();
  ::x2::Response* release_response_();
  void set_allocated_response_(::x2::Response* response_);

  // repeated .x2.Config config_ = 5;
  int config__size() const;
  void clear_config_();
  static const int kConfigFieldNumber = 5;
  const ::x2::Config& config_(int index) const;
  ::x2::Config* mutable_config_(int index);
  ::x2::Config* add_config_();
  ::google::protobuf::RepeatedPtrField< ::x2::Config >*
      mutable_config_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Config >&
      config_() const;

  // repeated .x2.Version version_ = 6;
  int version__size() const;
  void clear_version_();
  static const int kVersionFieldNumber = 6;
  const ::x2::Version& version_(int index) const;
  ::x2::Version* mutable_version_(int index);
  ::x2::Version* add_version_();
  ::google::protobuf::RepeatedPtrField< ::x2::Version >*
      mutable_version_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Version >&
      version_() const;

  // repeated .x2.Capability capability_ = 7;
  int capability__size() const;
  void clear_capability_();
  static const int kCapabilityFieldNumber = 7;
  const ::x2::Capability& capability_(int index) const;
  ::x2::Capability* mutable_capability_(int index);
  ::x2::Capability* add_capability_();
  ::google::protobuf::RepeatedPtrField< ::x2::Capability >*
      mutable_capability_();
  const ::google::protobuf::RepeatedPtrField< ::x2::Capability >&
      capability_() const;

  // @@protoc_insertion_point(class_scope:x2.InfoMessage)
 private:

  ::google::protobuf::internal::ArenaStringPtr _unknown_fields_;
  ::google::protobuf::Arena* _arena_ptr_;

  bool _is_default_instance_;
  ::x2::Status* status__;
  ::x2::Command* command__;
  ::x2::LogLevel* loglevel__;
  ::x2::Response* response__;
  ::google::protobuf::RepeatedPtrField< ::x2::Config > config__;
  ::google::protobuf::RepeatedPtrField< ::x2::Version > version__;
  ::google::protobuf::RepeatedPtrField< ::x2::Capability > capability__;
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_x2_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_x2_2eproto();
  #endif
  friend void protobuf_AssignDesc_x2_2eproto();
  friend void protobuf_ShutdownFile_x2_2eproto();

  void InitAsDefaultInstance();
  static InfoMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CharArray

// optional string type_ = 1;
inline void CharArray::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharArray::type_() const {
  // @@protoc_insertion_point(field_get:x2.CharArray.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharArray::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CharArray.type_)
}
inline void CharArray::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CharArray.type_)
}
inline void CharArray::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CharArray.type_)
}
inline ::std::string* CharArray::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CharArray.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharArray::release_type_() {
  // @@protoc_insertion_point(field_release:x2.CharArray.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharArray::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.CharArray.type_)
}

// optional bytes array_ = 2;
inline void CharArray::clear_array_() {
  array__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CharArray::array_() const {
  // @@protoc_insertion_point(field_get:x2.CharArray.array_)
  return array__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharArray::set_array_(const ::std::string& value) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CharArray.array_)
}
inline void CharArray::set_array_(const char* value) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CharArray.array_)
}
inline void CharArray::set_array_(const void* value, size_t size) {
  
  array__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CharArray.array_)
}
inline ::std::string* CharArray::mutable_array_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CharArray.array_)
  return array__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CharArray::release_array_() {
  // @@protoc_insertion_point(field_release:x2.CharArray.array_)
  
  return array__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CharArray::set_allocated_array_(::std::string* array_) {
  if (array_ != NULL) {
    
  } else {
    
  }
  array__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), array_);
  // @@protoc_insertion_point(field_set_allocated:x2.CharArray.array_)
}

// -------------------------------------------------------------------

// FloatArray

// optional string type_ = 1;
inline void FloatArray::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FloatArray::type_() const {
  // @@protoc_insertion_point(field_get:x2.FloatArray.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FloatArray::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.FloatArray.type_)
}
inline void FloatArray::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.FloatArray.type_)
}
inline void FloatArray::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.FloatArray.type_)
}
inline ::std::string* FloatArray::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.FloatArray.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FloatArray::release_type_() {
  // @@protoc_insertion_point(field_release:x2.FloatArray.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FloatArray::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.FloatArray.type_)
}

// repeated float value_ = 2;
inline int FloatArray::value__size() const {
  return value__.size();
}
inline void FloatArray::clear_value_() {
  value__.Clear();
}
inline float FloatArray::value_(int index) const {
  // @@protoc_insertion_point(field_get:x2.FloatArray.value_)
  return value__.Get(index);
}
inline void FloatArray::set_value_(int index, float value) {
  value__.Set(index, value);
  // @@protoc_insertion_point(field_set:x2.FloatArray.value_)
}
inline void FloatArray::add_value_(float value) {
  value__.Add(value);
  // @@protoc_insertion_point(field_add:x2.FloatArray.value_)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatArray::value_() const {
  // @@protoc_insertion_point(field_list:x2.FloatArray.value_)
  return value__;
}
inline ::google::protobuf::RepeatedField< float >*
FloatArray::mutable_value_() {
  // @@protoc_insertion_point(field_mutable_list:x2.FloatArray.value_)
  return &value__;
}

// -------------------------------------------------------------------

// FloatMatrix

// optional string type_ = 1;
inline void FloatMatrix::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FloatMatrix::type_() const {
  // @@protoc_insertion_point(field_get:x2.FloatMatrix.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FloatMatrix::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.FloatMatrix.type_)
}
inline void FloatMatrix::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.FloatMatrix.type_)
}
inline void FloatMatrix::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.FloatMatrix.type_)
}
inline ::std::string* FloatMatrix::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.FloatMatrix.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FloatMatrix::release_type_() {
  // @@protoc_insertion_point(field_release:x2.FloatMatrix.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FloatMatrix::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.FloatMatrix.type_)
}

// repeated .x2.FloatArray arrays_ = 2;
inline int FloatMatrix::arrays__size() const {
  return arrays__.size();
}
inline void FloatMatrix::clear_arrays_() {
  arrays__.Clear();
}
inline const ::x2::FloatArray& FloatMatrix::arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.FloatMatrix.arrays_)
  return arrays__.Get(index);
}
inline ::x2::FloatArray* FloatMatrix::mutable_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.FloatMatrix.arrays_)
  return arrays__.Mutable(index);
}
inline ::x2::FloatArray* FloatMatrix::add_arrays_() {
  // @@protoc_insertion_point(field_add:x2.FloatMatrix.arrays_)
  return arrays__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
FloatMatrix::mutable_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.FloatMatrix.arrays_)
  return &arrays__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
FloatMatrix::arrays_() const {
  // @@protoc_insertion_point(field_list:x2.FloatMatrix.arrays_)
  return arrays__;
}

// -------------------------------------------------------------------

// Point

// optional float x_ = 1;
inline void Point::clear_x_() {
  x__ = 0;
}
inline float Point::x_() const {
  // @@protoc_insertion_point(field_get:x2.Point.x_)
  return x__;
}
inline void Point::set_x_(float value) {
  
  x__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.x_)
}

// optional float y_ = 2;
inline void Point::clear_y_() {
  y__ = 0;
}
inline float Point::y_() const {
  // @@protoc_insertion_point(field_get:x2.Point.y_)
  return y__;
}
inline void Point::set_y_(float value) {
  
  y__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.y_)
}

// optional float score_ = 3;
inline void Point::clear_score_() {
  score__ = 0;
}
inline float Point::score_() const {
  // @@protoc_insertion_point(field_get:x2.Point.score_)
  return score__;
}
inline void Point::set_score_(float value) {
  
  score__ = value;
  // @@protoc_insertion_point(field_set:x2.Point.score_)
}

// -------------------------------------------------------------------

// Points

// optional string type_ = 1;
inline void Points::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Points::type_() const {
  // @@protoc_insertion_point(field_get:x2.Points.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Points::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Points.type_)
}
inline void Points::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Points.type_)
}
inline void Points::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Points.type_)
}
inline ::std::string* Points::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Points.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Points::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Points.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Points::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Points.type_)
}

// repeated .x2.Point points_ = 2;
inline int Points::points__size() const {
  return points__.size();
}
inline void Points::clear_points_() {
  points__.Clear();
}
inline const ::x2::Point& Points::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Points.points_)
  return points__.Get(index);
}
inline ::x2::Point* Points::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Points.points_)
  return points__.Mutable(index);
}
inline ::x2::Point* Points::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Points.points_)
  return points__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Point >*
Points::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Points.points_)
  return &points__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Point >&
Points::points_() const {
  // @@protoc_insertion_point(field_list:x2.Points.points_)
  return points__;
}

// -------------------------------------------------------------------

// Box

// optional string type_ = 1;
inline void Box::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Box::type_() const {
  // @@protoc_insertion_point(field_get:x2.Box.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Box::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Box.type_)
}
inline void Box::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Box.type_)
}
inline void Box::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Box.type_)
}
inline ::std::string* Box::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Box.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Box::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Box.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Box::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Box.type_)
}

// optional .x2.Point top_left_ = 2;
inline bool Box::has_top_left_() const {
  return !_is_default_instance_ && top_left__ != NULL;
}
inline void Box::clear_top_left_() {
  if (GetArenaNoVirtual() == NULL && top_left__ != NULL) delete top_left__;
  top_left__ = NULL;
}
inline const ::x2::Point& Box::top_left_() const {
  // @@protoc_insertion_point(field_get:x2.Box.top_left_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return top_left__ != NULL ? *top_left__ : *default_instance().top_left__;
#else
  return top_left__ != NULL ? *top_left__ : *default_instance_->top_left__;
#endif
}
inline ::x2::Point* Box::mutable_top_left_() {
  
  if (top_left__ == NULL) {
    top_left__ = new ::x2::Point;
  }
  // @@protoc_insertion_point(field_mutable:x2.Box.top_left_)
  return top_left__;
}
inline ::x2::Point* Box::release_top_left_() {
  // @@protoc_insertion_point(field_release:x2.Box.top_left_)
  
  ::x2::Point* temp = top_left__;
  top_left__ = NULL;
  return temp;
}
inline void Box::set_allocated_top_left_(::x2::Point* top_left_) {
  delete top_left__;
  top_left__ = top_left_;
  if (top_left_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Box.top_left_)
}

// optional .x2.Point bottom_right_ = 3;
inline bool Box::has_bottom_right_() const {
  return !_is_default_instance_ && bottom_right__ != NULL;
}
inline void Box::clear_bottom_right_() {
  if (GetArenaNoVirtual() == NULL && bottom_right__ != NULL) delete bottom_right__;
  bottom_right__ = NULL;
}
inline const ::x2::Point& Box::bottom_right_() const {
  // @@protoc_insertion_point(field_get:x2.Box.bottom_right_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return bottom_right__ != NULL ? *bottom_right__ : *default_instance().bottom_right__;
#else
  return bottom_right__ != NULL ? *bottom_right__ : *default_instance_->bottom_right__;
#endif
}
inline ::x2::Point* Box::mutable_bottom_right_() {
  
  if (bottom_right__ == NULL) {
    bottom_right__ = new ::x2::Point;
  }
  // @@protoc_insertion_point(field_mutable:x2.Box.bottom_right_)
  return bottom_right__;
}
inline ::x2::Point* Box::release_bottom_right_() {
  // @@protoc_insertion_point(field_release:x2.Box.bottom_right_)
  
  ::x2::Point* temp = bottom_right__;
  bottom_right__ = NULL;
  return temp;
}
inline void Box::set_allocated_bottom_right_(::x2::Point* bottom_right_) {
  delete bottom_right__;
  bottom_right__ = bottom_right_;
  if (bottom_right_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Box.bottom_right_)
}

// -------------------------------------------------------------------

// Attributes

// optional string type_ = 1;
inline void Attributes::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Attributes::type_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Attributes::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Attributes.type_)
}
inline void Attributes::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Attributes.type_)
}
inline void Attributes::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Attributes.type_)
}
inline ::std::string* Attributes::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Attributes.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Attributes::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Attributes.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Attributes::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Attributes.type_)
}

// optional float value_ = 2;
inline void Attributes::clear_value_() {
  value__ = 0;
}
inline float Attributes::value_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.value_)
  return value__;
}
inline void Attributes::set_value_(float value) {
  
  value__ = value;
  // @@protoc_insertion_point(field_set:x2.Attributes.value_)
}

// optional float score_ = 3;
inline void Attributes::clear_score_() {
  score__ = 0;
}
inline float Attributes::score_() const {
  // @@protoc_insertion_point(field_get:x2.Attributes.score_)
  return score__;
}
inline void Attributes::set_score_(float value) {
  
  score__ = value;
  // @@protoc_insertion_point(field_set:x2.Attributes.score_)
}

// -------------------------------------------------------------------

// DBResult

// optional string db_type_ = 1;
inline void DBResult::clear_db_type_() {
  db_type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBResult::db_type_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.db_type_)
  return db_type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBResult::set_db_type_(const ::std::string& value) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.DBResult.db_type_)
}
inline void DBResult::set_db_type_(const char* value) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.DBResult.db_type_)
}
inline void DBResult::set_db_type_(const char* value, size_t size) {
  
  db_type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.DBResult.db_type_)
}
inline ::std::string* DBResult::mutable_db_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.DBResult.db_type_)
  return db_type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBResult::release_db_type_() {
  // @@protoc_insertion_point(field_release:x2.DBResult.db_type_)
  
  return db_type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBResult::set_allocated_db_type_(::std::string* db_type_) {
  if (db_type_ != NULL) {
    
  } else {
    
  }
  db_type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_type_);
  // @@protoc_insertion_point(field_set_allocated:x2.DBResult.db_type_)
}

// optional string match_id_ = 2;
inline void DBResult::clear_match_id_() {
  match_id__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBResult::match_id_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.match_id_)
  return match_id__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBResult::set_match_id_(const ::std::string& value) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.DBResult.match_id_)
}
inline void DBResult::set_match_id_(const char* value) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.DBResult.match_id_)
}
inline void DBResult::set_match_id_(const char* value, size_t size) {
  
  match_id__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.DBResult.match_id_)
}
inline ::std::string* DBResult::mutable_match_id_() {
  
  // @@protoc_insertion_point(field_mutable:x2.DBResult.match_id_)
  return match_id__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBResult::release_match_id_() {
  // @@protoc_insertion_point(field_release:x2.DBResult.match_id_)
  
  return match_id__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBResult::set_allocated_match_id_(::std::string* match_id_) {
  if (match_id_ != NULL) {
    
  } else {
    
  }
  match_id__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), match_id_);
  // @@protoc_insertion_point(field_set_allocated:x2.DBResult.match_id_)
}

// optional float distance_ = 3;
inline void DBResult::clear_distance_() {
  distance__ = 0;
}
inline float DBResult::distance_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.distance_)
  return distance__;
}
inline void DBResult::set_distance_(float value) {
  
  distance__ = value;
  // @@protoc_insertion_point(field_set:x2.DBResult.distance_)
}

// optional float similarity_ = 4;
inline void DBResult::clear_similarity_() {
  similarity__ = 0;
}
inline float DBResult::similarity_() const {
  // @@protoc_insertion_point(field_get:x2.DBResult.similarity_)
  return similarity__;
}
inline void DBResult::set_similarity_(float value) {
  
  similarity__ = value;
  // @@protoc_insertion_point(field_set:x2.DBResult.similarity_)
}

// -------------------------------------------------------------------

// Image

// optional bytes buf_ = 1;
inline void Image::clear_buf_() {
  buf__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::buf_() const {
  // @@protoc_insertion_point(field_get:x2.Image.buf_)
  return buf__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_buf_(const ::std::string& value) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Image.buf_)
}
inline void Image::set_buf_(const char* value) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Image.buf_)
}
inline void Image::set_buf_(const void* value, size_t size) {
  
  buf__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Image.buf_)
}
inline ::std::string* Image::mutable_buf_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Image.buf_)
  return buf__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_buf_() {
  // @@protoc_insertion_point(field_release:x2.Image.buf_)
  
  return buf__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_buf_(::std::string* buf_) {
  if (buf_ != NULL) {
    
  } else {
    
  }
  buf__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf_);
  // @@protoc_insertion_point(field_set_allocated:x2.Image.buf_)
}

// optional string type_ = 2;
inline void Image::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Image::type_() const {
  // @@protoc_insertion_point(field_get:x2.Image.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Image.type_)
}
inline void Image::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Image.type_)
}
inline void Image::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Image.type_)
}
inline ::std::string* Image::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Image.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Image::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Image.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Image::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Image.type_)
}

// optional uint32 width_ = 3;
inline void Image::clear_width_() {
  width__ = 0u;
}
inline ::google::protobuf::uint32 Image::width_() const {
  // @@protoc_insertion_point(field_get:x2.Image.width_)
  return width__;
}
inline void Image::set_width_(::google::protobuf::uint32 value) {
  
  width__ = value;
  // @@protoc_insertion_point(field_set:x2.Image.width_)
}

// optional uint32 height_ = 4;
inline void Image::clear_height_() {
  height__ = 0u;
}
inline ::google::protobuf::uint32 Image::height_() const {
  // @@protoc_insertion_point(field_get:x2.Image.height_)
  return height__;
}
inline void Image::set_height_(::google::protobuf::uint32 value) {
  
  height__ = value;
  // @@protoc_insertion_point(field_set:x2.Image.height_)
}

// -------------------------------------------------------------------

// Enable

// optional string type_ = 1;
inline void Enable::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Enable::type_() const {
  // @@protoc_insertion_point(field_get:x2.Enable.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Enable::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Enable.type_)
}
inline void Enable::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Enable.type_)
}
inline void Enable::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Enable.type_)
}
inline ::std::string* Enable::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Enable.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Enable::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Enable.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Enable::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Enable.type_)
}

// optional bool value_ = 2;
inline void Enable::clear_value_() {
  value__ = false;
}
inline bool Enable::value_() const {
  // @@protoc_insertion_point(field_get:x2.Enable.value_)
  return value__;
}
inline void Enable::set_value_(bool value) {
  
  value__ = value;
  // @@protoc_insertion_point(field_set:x2.Enable.value_)
}

// -------------------------------------------------------------------

// Threshold

// optional string type_ = 1;
inline void Threshold::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Threshold::type_() const {
  // @@protoc_insertion_point(field_get:x2.Threshold.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Threshold::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Threshold.type_)
}
inline void Threshold::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Threshold.type_)
}
inline void Threshold::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Threshold.type_)
}
inline ::std::string* Threshold::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Threshold.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Threshold::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Threshold.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Threshold::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Threshold.type_)
}

// optional float value_ = 2;
inline void Threshold::clear_value_() {
  value__ = 0;
}
inline float Threshold::value_() const {
  // @@protoc_insertion_point(field_get:x2.Threshold.value_)
  return value__;
}
inline void Threshold::set_value_(float value) {
  
  value__ = value;
  // @@protoc_insertion_point(field_set:x2.Threshold.value_)
}

// -------------------------------------------------------------------

// Mode

// optional string type_ = 1;
inline void Mode::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mode::type_() const {
  // @@protoc_insertion_point(field_get:x2.Mode.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mode::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Mode.type_)
}
inline void Mode::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Mode.type_)
}
inline void Mode::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Mode.type_)
}
inline ::std::string* Mode::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Mode.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mode::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Mode.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mode::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Mode.type_)
}

// optional string value_ = 2;
inline void Mode::clear_value_() {
  value__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Mode::value_() const {
  // @@protoc_insertion_point(field_get:x2.Mode.value_)
  return value__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mode::set_value_(const ::std::string& value) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Mode.value_)
}
inline void Mode::set_value_(const char* value) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Mode.value_)
}
inline void Mode::set_value_(const char* value, size_t size) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Mode.value_)
}
inline ::std::string* Mode::mutable_value_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Mode.value_)
  return value__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Mode::release_value_() {
  // @@protoc_insertion_point(field_release:x2.Mode.value_)
  
  return value__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Mode::set_allocated_value_(::std::string* value_) {
  if (value_ != NULL) {
    
  } else {
    
  }
  value__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_);
  // @@protoc_insertion_point(field_set_allocated:x2.Mode.value_)
}

// -------------------------------------------------------------------

// Target

// optional string type_ = 1;
inline void Target::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Target::type_() const {
  // @@protoc_insertion_point(field_get:x2.Target.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Target::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Target.type_)
}
inline void Target::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Target.type_)
}
inline void Target::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Target.type_)
}
inline ::std::string* Target::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Target.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Target::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Target.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Target::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Target.type_)
}

// optional uint64 track_id_ = 2;
inline void Target::clear_track_id_() {
  track_id__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Target::track_id_() const {
  // @@protoc_insertion_point(field_get:x2.Target.track_id_)
  return track_id__;
}
inline void Target::set_track_id_(::google::protobuf::uint64 value) {
  
  track_id__ = value;
  // @@protoc_insertion_point(field_set:x2.Target.track_id_)
}

// repeated .x2.Box boxes_ = 3;
inline int Target::boxes__size() const {
  return boxes__.size();
}
inline void Target::clear_boxes_() {
  boxes__.Clear();
}
inline const ::x2::Box& Target::boxes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.boxes_)
  return boxes__.Get(index);
}
inline ::x2::Box* Target::mutable_boxes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.boxes_)
  return boxes__.Mutable(index);
}
inline ::x2::Box* Target::add_boxes_() {
  // @@protoc_insertion_point(field_add:x2.Target.boxes_)
  return boxes__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Box >*
Target::mutable_boxes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.boxes_)
  return &boxes__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
Target::boxes_() const {
  // @@protoc_insertion_point(field_list:x2.Target.boxes_)
  return boxes__;
}

// repeated .x2.Attributes attributes_ = 4;
inline int Target::attributes__size() const {
  return attributes__.size();
}
inline void Target::clear_attributes_() {
  attributes__.Clear();
}
inline const ::x2::Attributes& Target::attributes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.attributes_)
  return attributes__.Get(index);
}
inline ::x2::Attributes* Target::mutable_attributes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.attributes_)
  return attributes__.Mutable(index);
}
inline ::x2::Attributes* Target::add_attributes_() {
  // @@protoc_insertion_point(field_add:x2.Target.attributes_)
  return attributes__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
Target::mutable_attributes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.attributes_)
  return &attributes__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
Target::attributes_() const {
  // @@protoc_insertion_point(field_list:x2.Target.attributes_)
  return attributes__;
}

// repeated .x2.Points points_ = 5;
inline int Target::points__size() const {
  return points__.size();
}
inline void Target::clear_points_() {
  points__.Clear();
}
inline const ::x2::Points& Target::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.points_)
  return points__.Get(index);
}
inline ::x2::Points* Target::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.points_)
  return points__.Mutable(index);
}
inline ::x2::Points* Target::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Target.points_)
  return points__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Points >*
Target::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.points_)
  return &points__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
Target::points_() const {
  // @@protoc_insertion_point(field_list:x2.Target.points_)
  return points__;
}

// repeated .x2.FloatArray float_arrays_ = 6;
inline int Target::float_arrays__size() const {
  return float_arrays__.size();
}
inline void Target::clear_float_arrays_() {
  float_arrays__.Clear();
}
inline const ::x2::FloatArray& Target::float_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.float_arrays_)
  return float_arrays__.Get(index);
}
inline ::x2::FloatArray* Target::mutable_float_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.float_arrays_)
  return float_arrays__.Mutable(index);
}
inline ::x2::FloatArray* Target::add_float_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Target.float_arrays_)
  return float_arrays__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
Target::mutable_float_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.float_arrays_)
  return &float_arrays__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
Target::float_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Target.float_arrays_)
  return float_arrays__;
}

// repeated .x2.FloatMatrix float_matrixs_ = 7;
inline int Target::float_matrixs__size() const {
  return float_matrixs__.size();
}
inline void Target::clear_float_matrixs_() {
  float_matrixs__.Clear();
}
inline const ::x2::FloatMatrix& Target::float_matrixs_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Target.float_matrixs_)
  return float_matrixs__.Get(index);
}
inline ::x2::FloatMatrix* Target::mutable_float_matrixs_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Target.float_matrixs_)
  return float_matrixs__.Mutable(index);
}
inline ::x2::FloatMatrix* Target::add_float_matrixs_() {
  // @@protoc_insertion_point(field_add:x2.Target.float_matrixs_)
  return float_matrixs__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >*
Target::mutable_float_matrixs_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Target.float_matrixs_)
  return &float_matrixs__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::FloatMatrix >&
Target::float_matrixs_() const {
  // @@protoc_insertion_point(field_list:x2.Target.float_matrixs_)
  return float_matrixs__;
}

// -------------------------------------------------------------------

// SmartFrameMessage

// optional fixed64 timestamp_ = 1;
inline void SmartFrameMessage::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SmartFrameMessage::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.timestamp_)
  return timestamp__;
}
inline void SmartFrameMessage::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.SmartFrameMessage.timestamp_)
}

// optional uint32 error_code_ = 2;
inline void SmartFrameMessage::clear_error_code_() {
  error_code__ = 0u;
}
inline ::google::protobuf::uint32 SmartFrameMessage::error_code_() const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.error_code_)
  return error_code__;
}
inline void SmartFrameMessage::set_error_code_(::google::protobuf::uint32 value) {
  
  error_code__ = value;
  // @@protoc_insertion_point(field_set:x2.SmartFrameMessage.error_code_)
}

// repeated .x2.Target targets_ = 3;
inline int SmartFrameMessage::targets__size() const {
  return targets__.size();
}
inline void SmartFrameMessage::clear_targets_() {
  targets__.Clear();
}
inline const ::x2::Target& SmartFrameMessage::targets_(int index) const {
  // @@protoc_insertion_point(field_get:x2.SmartFrameMessage.targets_)
  return targets__.Get(index);
}
inline ::x2::Target* SmartFrameMessage::mutable_targets_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.SmartFrameMessage.targets_)
  return targets__.Mutable(index);
}
inline ::x2::Target* SmartFrameMessage::add_targets_() {
  // @@protoc_insertion_point(field_add:x2.SmartFrameMessage.targets_)
  return targets__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Target >*
SmartFrameMessage::mutable_targets_() {
  // @@protoc_insertion_point(field_mutable_list:x2.SmartFrameMessage.targets_)
  return &targets__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Target >&
SmartFrameMessage::targets_() const {
  // @@protoc_insertion_point(field_list:x2.SmartFrameMessage.targets_)
  return targets__;
}

// -------------------------------------------------------------------

// Capture

// optional string type_ = 1;
inline void Capture::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Capture::type_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Capture::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Capture.type_)
}
inline void Capture::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Capture.type_)
}
inline void Capture::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Capture.type_)
}
inline ::std::string* Capture::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Capture.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Capture::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Capture.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Capture::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Capture.type_)
}

// optional fixed64 timestamp_ = 2;
inline void Capture::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Capture::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.timestamp_)
  return timestamp__;
}
inline void Capture::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.Capture.timestamp_)
}

// optional .x2.Image img_ = 3;
inline bool Capture::has_img_() const {
  return !_is_default_instance_ && img__ != NULL;
}
inline void Capture::clear_img_() {
  if (GetArenaNoVirtual() == NULL && img__ != NULL) delete img__;
  img__ = NULL;
}
inline const ::x2::Image& Capture::img_() const {
  // @@protoc_insertion_point(field_get:x2.Capture.img_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return img__ != NULL ? *img__ : *default_instance().img__;
#else
  return img__ != NULL ? *img__ : *default_instance_->img__;
#endif
}
inline ::x2::Image* Capture::mutable_img_() {
  
  if (img__ == NULL) {
    img__ = new ::x2::Image;
  }
  // @@protoc_insertion_point(field_mutable:x2.Capture.img_)
  return img__;
}
inline ::x2::Image* Capture::release_img_() {
  // @@protoc_insertion_point(field_release:x2.Capture.img_)
  
  ::x2::Image* temp = img__;
  img__ = NULL;
  return temp;
}
inline void Capture::set_allocated_img_(::x2::Image* img_) {
  delete img__;
  img__ = img_;
  if (img_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Capture.img_)
}

// repeated .x2.Box boxes_ = 4;
inline int Capture::boxes__size() const {
  return boxes__.size();
}
inline void Capture::clear_boxes_() {
  boxes__.Clear();
}
inline const ::x2::Box& Capture::boxes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.boxes_)
  return boxes__.Get(index);
}
inline ::x2::Box* Capture::mutable_boxes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.boxes_)
  return boxes__.Mutable(index);
}
inline ::x2::Box* Capture::add_boxes_() {
  // @@protoc_insertion_point(field_add:x2.Capture.boxes_)
  return boxes__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Box >*
Capture::mutable_boxes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.boxes_)
  return &boxes__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
Capture::boxes_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.boxes_)
  return boxes__;
}

// repeated .x2.Attributes attributes_ = 5;
inline int Capture::attributes__size() const {
  return attributes__.size();
}
inline void Capture::clear_attributes_() {
  attributes__.Clear();
}
inline const ::x2::Attributes& Capture::attributes_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.attributes_)
  return attributes__.Get(index);
}
inline ::x2::Attributes* Capture::mutable_attributes_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.attributes_)
  return attributes__.Mutable(index);
}
inline ::x2::Attributes* Capture::add_attributes_() {
  // @@protoc_insertion_point(field_add:x2.Capture.attributes_)
  return attributes__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Attributes >*
Capture::mutable_attributes_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.attributes_)
  return &attributes__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Attributes >&
Capture::attributes_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.attributes_)
  return attributes__;
}

// repeated .x2.Points points_ = 6;
inline int Capture::points__size() const {
  return points__.size();
}
inline void Capture::clear_points_() {
  points__.Clear();
}
inline const ::x2::Points& Capture::points_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.points_)
  return points__.Get(index);
}
inline ::x2::Points* Capture::mutable_points_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.points_)
  return points__.Mutable(index);
}
inline ::x2::Points* Capture::add_points_() {
  // @@protoc_insertion_point(field_add:x2.Capture.points_)
  return points__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Points >*
Capture::mutable_points_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.points_)
  return &points__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Points >&
Capture::points_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.points_)
  return points__;
}

// repeated .x2.FloatArray float_arrays_ = 7;
inline int Capture::float_arrays__size() const {
  return float_arrays__.size();
}
inline void Capture::clear_float_arrays_() {
  float_arrays__.Clear();
}
inline const ::x2::FloatArray& Capture::float_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.float_arrays_)
  return float_arrays__.Get(index);
}
inline ::x2::FloatArray* Capture::mutable_float_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.float_arrays_)
  return float_arrays__.Mutable(index);
}
inline ::x2::FloatArray* Capture::add_float_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Capture.float_arrays_)
  return float_arrays__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >*
Capture::mutable_float_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.float_arrays_)
  return &float_arrays__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::FloatArray >&
Capture::float_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.float_arrays_)
  return float_arrays__;
}

// repeated .x2.CharArray char_arrays_ = 8;
inline int Capture::char_arrays__size() const {
  return char_arrays__.size();
}
inline void Capture::clear_char_arrays_() {
  char_arrays__.Clear();
}
inline const ::x2::CharArray& Capture::char_arrays_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Capture.char_arrays_)
  return char_arrays__.Get(index);
}
inline ::x2::CharArray* Capture::mutable_char_arrays_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Capture.char_arrays_)
  return char_arrays__.Mutable(index);
}
inline ::x2::CharArray* Capture::add_char_arrays_() {
  // @@protoc_insertion_point(field_add:x2.Capture.char_arrays_)
  return char_arrays__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::CharArray >*
Capture::mutable_char_arrays_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Capture.char_arrays_)
  return &char_arrays__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::CharArray >&
Capture::char_arrays_() const {
  // @@protoc_insertion_point(field_list:x2.Capture.char_arrays_)
  return char_arrays__;
}

// -------------------------------------------------------------------

// CaptureTarget

// optional string type_ = 1;
inline void CaptureTarget::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CaptureTarget::type_() const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CaptureTarget::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.CaptureTarget.type_)
}
inline void CaptureTarget::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.CaptureTarget.type_)
}
inline void CaptureTarget::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.CaptureTarget.type_)
}
inline ::std::string* CaptureTarget::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CaptureTarget::release_type_() {
  // @@protoc_insertion_point(field_release:x2.CaptureTarget.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CaptureTarget::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.CaptureTarget.type_)
}

// optional uint64 track_id_ = 2;
inline void CaptureTarget::clear_track_id_() {
  track_id__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CaptureTarget::track_id_() const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.track_id_)
  return track_id__;
}
inline void CaptureTarget::set_track_id_(::google::protobuf::uint64 value) {
  
  track_id__ = value;
  // @@protoc_insertion_point(field_set:x2.CaptureTarget.track_id_)
}

// repeated .x2.Capture captures_ = 3;
inline int CaptureTarget::captures__size() const {
  return captures__.size();
}
inline void CaptureTarget::clear_captures_() {
  captures__.Clear();
}
inline const ::x2::Capture& CaptureTarget::captures_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.captures_)
  return captures__.Get(index);
}
inline ::x2::Capture* CaptureTarget::mutable_captures_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.captures_)
  return captures__.Mutable(index);
}
inline ::x2::Capture* CaptureTarget::add_captures_() {
  // @@protoc_insertion_point(field_add:x2.CaptureTarget.captures_)
  return captures__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Capture >*
CaptureTarget::mutable_captures_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureTarget.captures_)
  return &captures__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Capture >&
CaptureTarget::captures_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureTarget.captures_)
  return captures__;
}

// repeated .x2.DBResult db_results_ = 4;
inline int CaptureTarget::db_results__size() const {
  return db_results__.size();
}
inline void CaptureTarget::clear_db_results_() {
  db_results__.Clear();
}
inline const ::x2::DBResult& CaptureTarget::db_results_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureTarget.db_results_)
  return db_results__.Get(index);
}
inline ::x2::DBResult* CaptureTarget::mutable_db_results_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureTarget.db_results_)
  return db_results__.Mutable(index);
}
inline ::x2::DBResult* CaptureTarget::add_db_results_() {
  // @@protoc_insertion_point(field_add:x2.CaptureTarget.db_results_)
  return db_results__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::DBResult >*
CaptureTarget::mutable_db_results_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureTarget.db_results_)
  return &db_results__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::DBResult >&
CaptureTarget::db_results_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureTarget.db_results_)
  return db_results__;
}

// -------------------------------------------------------------------

// CaptureFrameMessage

// repeated .x2.CaptureTarget targets_ = 1;
inline int CaptureFrameMessage::targets__size() const {
  return targets__.size();
}
inline void CaptureFrameMessage::clear_targets_() {
  targets__.Clear();
}
inline const ::x2::CaptureTarget& CaptureFrameMessage::targets_(int index) const {
  // @@protoc_insertion_point(field_get:x2.CaptureFrameMessage.targets_)
  return targets__.Get(index);
}
inline ::x2::CaptureTarget* CaptureFrameMessage::mutable_targets_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.CaptureFrameMessage.targets_)
  return targets__.Mutable(index);
}
inline ::x2::CaptureTarget* CaptureFrameMessage::add_targets_() {
  // @@protoc_insertion_point(field_add:x2.CaptureFrameMessage.targets_)
  return targets__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >*
CaptureFrameMessage::mutable_targets_() {
  // @@protoc_insertion_point(field_mutable_list:x2.CaptureFrameMessage.targets_)
  return &targets__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::CaptureTarget >&
CaptureFrameMessage::targets_() const {
  // @@protoc_insertion_point(field_list:x2.CaptureFrameMessage.targets_)
  return targets__;
}

// -------------------------------------------------------------------

// FrameMessage

// optional .x2.SmartFrameMessage smart_msg_ = 1;
inline bool FrameMessage::has_smart_msg_() const {
  return !_is_default_instance_ && smart_msg__ != NULL;
}
inline void FrameMessage::clear_smart_msg_() {
  if (GetArenaNoVirtual() == NULL && smart_msg__ != NULL) delete smart_msg__;
  smart_msg__ = NULL;
}
inline const ::x2::SmartFrameMessage& FrameMessage::smart_msg_() const {
  // @@protoc_insertion_point(field_get:x2.FrameMessage.smart_msg_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return smart_msg__ != NULL ? *smart_msg__ : *default_instance().smart_msg__;
#else
  return smart_msg__ != NULL ? *smart_msg__ : *default_instance_->smart_msg__;
#endif
}
inline ::x2::SmartFrameMessage* FrameMessage::mutable_smart_msg_() {
  
  if (smart_msg__ == NULL) {
    smart_msg__ = new ::x2::SmartFrameMessage;
  }
  // @@protoc_insertion_point(field_mutable:x2.FrameMessage.smart_msg_)
  return smart_msg__;
}
inline ::x2::SmartFrameMessage* FrameMessage::release_smart_msg_() {
  // @@protoc_insertion_point(field_release:x2.FrameMessage.smart_msg_)
  
  ::x2::SmartFrameMessage* temp = smart_msg__;
  smart_msg__ = NULL;
  return temp;
}
inline void FrameMessage::set_allocated_smart_msg_(::x2::SmartFrameMessage* smart_msg_) {
  delete smart_msg__;
  smart_msg__ = smart_msg_;
  if (smart_msg_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.FrameMessage.smart_msg_)
}

// optional .x2.CaptureFrameMessage capture_msg_ = 2;
inline bool FrameMessage::has_capture_msg_() const {
  return !_is_default_instance_ && capture_msg__ != NULL;
}
inline void FrameMessage::clear_capture_msg_() {
  if (GetArenaNoVirtual() == NULL && capture_msg__ != NULL) delete capture_msg__;
  capture_msg__ = NULL;
}
inline const ::x2::CaptureFrameMessage& FrameMessage::capture_msg_() const {
  // @@protoc_insertion_point(field_get:x2.FrameMessage.capture_msg_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return capture_msg__ != NULL ? *capture_msg__ : *default_instance().capture_msg__;
#else
  return capture_msg__ != NULL ? *capture_msg__ : *default_instance_->capture_msg__;
#endif
}
inline ::x2::CaptureFrameMessage* FrameMessage::mutable_capture_msg_() {
  
  if (capture_msg__ == NULL) {
    capture_msg__ = new ::x2::CaptureFrameMessage;
  }
  // @@protoc_insertion_point(field_mutable:x2.FrameMessage.capture_msg_)
  return capture_msg__;
}
inline ::x2::CaptureFrameMessage* FrameMessage::release_capture_msg_() {
  // @@protoc_insertion_point(field_release:x2.FrameMessage.capture_msg_)
  
  ::x2::CaptureFrameMessage* temp = capture_msg__;
  capture_msg__ = NULL;
  return temp;
}
inline void FrameMessage::set_allocated_capture_msg_(::x2::CaptureFrameMessage* capture_msg_) {
  delete capture_msg__;
  capture_msg__ = capture_msg_;
  if (capture_msg_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.FrameMessage.capture_msg_)
}

// -------------------------------------------------------------------

// Capability

// optional string type_ = 1;
inline void Capability::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Capability::type_() const {
  // @@protoc_insertion_point(field_get:x2.Capability.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Capability::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Capability.type_)
}
inline void Capability::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Capability.type_)
}
inline void Capability::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Capability.type_)
}
inline ::std::string* Capability::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Capability.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Capability::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Capability.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Capability::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Capability.type_)
}

// optional .x2.Enable cap_array_ = 2;
inline bool Capability::has_cap_array_() const {
  return !_is_default_instance_ && cap_array__ != NULL;
}
inline void Capability::clear_cap_array_() {
  if (GetArenaNoVirtual() == NULL && cap_array__ != NULL) delete cap_array__;
  cap_array__ = NULL;
}
inline const ::x2::Enable& Capability::cap_array_() const {
  // @@protoc_insertion_point(field_get:x2.Capability.cap_array_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return cap_array__ != NULL ? *cap_array__ : *default_instance().cap_array__;
#else
  return cap_array__ != NULL ? *cap_array__ : *default_instance_->cap_array__;
#endif
}
inline ::x2::Enable* Capability::mutable_cap_array_() {
  
  if (cap_array__ == NULL) {
    cap_array__ = new ::x2::Enable;
  }
  // @@protoc_insertion_point(field_mutable:x2.Capability.cap_array_)
  return cap_array__;
}
inline ::x2::Enable* Capability::release_cap_array_() {
  // @@protoc_insertion_point(field_release:x2.Capability.cap_array_)
  
  ::x2::Enable* temp = cap_array__;
  cap_array__ = NULL;
  return temp;
}
inline void Capability::set_allocated_cap_array_(::x2::Enable* cap_array_) {
  delete cap_array__;
  cap_array__ = cap_array_;
  if (cap_array_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.Capability.cap_array_)
}

// -------------------------------------------------------------------

// Version

// optional string type_ = 1;
inline void Version::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::type_() const {
  // @@protoc_insertion_point(field_get:x2.Version.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Version.type_)
}
inline void Version::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Version.type_)
}
inline void Version::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Version.type_)
}
inline ::std::string* Version::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Version.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Version.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Version.type_)
}

// optional string value_ = 2;
inline void Version::clear_value_() {
  value__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Version::value_() const {
  // @@protoc_insertion_point(field_get:x2.Version.value_)
  return value__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_value_(const ::std::string& value) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Version.value_)
}
inline void Version::set_value_(const char* value) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Version.value_)
}
inline void Version::set_value_(const char* value, size_t size) {
  
  value__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Version.value_)
}
inline ::std::string* Version::mutable_value_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Version.value_)
  return value__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Version::release_value_() {
  // @@protoc_insertion_point(field_release:x2.Version.value_)
  
  return value__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Version::set_allocated_value_(::std::string* value_) {
  if (value_ != NULL) {
    
  } else {
    
  }
  value__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_);
  // @@protoc_insertion_point(field_set_allocated:x2.Version.value_)
}

// -------------------------------------------------------------------

// Config

// optional string type_ = 1;
inline void Config::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Config::type_() const {
  // @@protoc_insertion_point(field_get:x2.Config.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Config.type_)
}
inline void Config::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Config.type_)
}
inline void Config::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Config.type_)
}
inline ::std::string* Config::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Config.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Config::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Config.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Config::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Config.type_)
}

// repeated .x2.Threshold threshold_ = 2;
inline int Config::threshold__size() const {
  return threshold__.size();
}
inline void Config::clear_threshold_() {
  threshold__.Clear();
}
inline const ::x2::Threshold& Config::threshold_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Config.threshold_)
  return threshold__.Get(index);
}
inline ::x2::Threshold* Config::mutable_threshold_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Config.threshold_)
  return threshold__.Mutable(index);
}
inline ::x2::Threshold* Config::add_threshold_() {
  // @@protoc_insertion_point(field_add:x2.Config.threshold_)
  return threshold__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Threshold >*
Config::mutable_threshold_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Config.threshold_)
  return &threshold__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Threshold >&
Config::threshold_() const {
  // @@protoc_insertion_point(field_list:x2.Config.threshold_)
  return threshold__;
}

// repeated .x2.Mode mode_ = 3;
inline int Config::mode__size() const {
  return mode__.size();
}
inline void Config::clear_mode_() {
  mode__.Clear();
}
inline const ::x2::Mode& Config::mode_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Config.mode_)
  return mode__.Get(index);
}
inline ::x2::Mode* Config::mutable_mode_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Config.mode_)
  return mode__.Mutable(index);
}
inline ::x2::Mode* Config::add_mode_() {
  // @@protoc_insertion_point(field_add:x2.Config.mode_)
  return mode__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Mode >*
Config::mutable_mode_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Config.mode_)
  return &mode__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Mode >&
Config::mode_() const {
  // @@protoc_insertion_point(field_list:x2.Config.mode_)
  return mode__;
}

// repeated .x2.Box shield_ = 4;
inline int Config::shield__size() const {
  return shield__.size();
}
inline void Config::clear_shield_() {
  shield__.Clear();
}
inline const ::x2::Box& Config::shield_(int index) const {
  // @@protoc_insertion_point(field_get:x2.Config.shield_)
  return shield__.Get(index);
}
inline ::x2::Box* Config::mutable_shield_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.Config.shield_)
  return shield__.Mutable(index);
}
inline ::x2::Box* Config::add_shield_() {
  // @@protoc_insertion_point(field_add:x2.Config.shield_)
  return shield__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Box >*
Config::mutable_shield_() {
  // @@protoc_insertion_point(field_mutable_list:x2.Config.shield_)
  return &shield__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Box >&
Config::shield_() const {
  // @@protoc_insertion_point(field_list:x2.Config.shield_)
  return shield__;
}

// -------------------------------------------------------------------

// Status

// optional string type_ = 1;
inline void Status::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Status::type_() const {
  // @@protoc_insertion_point(field_get:x2.Status.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Status::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Status.type_)
}
inline void Status::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Status.type_)
}
inline void Status::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Status.type_)
}
inline ::std::string* Status::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Status.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Status::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Status.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Status::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Status.type_)
}

// optional uint64 timestamp_ = 2;
inline void Status::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Status::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.Status.timestamp_)
  return timestamp__;
}
inline void Status::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.Status.timestamp_)
}

// optional .x2.Status.RunStatus run_status_ = 3;
inline void Status::clear_run_status_() {
  run_status__ = 0;
}
inline ::x2::Status_RunStatus Status::run_status_() const {
  // @@protoc_insertion_point(field_get:x2.Status.run_status_)
  return static_cast< ::x2::Status_RunStatus >(run_status__);
}
inline void Status::set_run_status_(::x2::Status_RunStatus value) {
  
  run_status__ = value;
  // @@protoc_insertion_point(field_set:x2.Status.run_status_)
}

// -------------------------------------------------------------------

// Command

// optional string type_ = 1;
inline void Command::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Command::type_() const {
  // @@protoc_insertion_point(field_get:x2.Command.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Command.type_)
}
inline void Command::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Command.type_)
}
inline void Command::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Command.type_)
}
inline ::std::string* Command::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Command.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Command::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Command.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Command::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Command.type_)
}

// optional uint64 timestamp_ = 2;
inline void Command::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Command::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.Command.timestamp_)
  return timestamp__;
}
inline void Command::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.Command.timestamp_)
}

// optional .x2.Command.Order order_ = 3;
inline void Command::clear_order_() {
  order__ = 0;
}
inline ::x2::Command_Order Command::order_() const {
  // @@protoc_insertion_point(field_get:x2.Command.order_)
  return static_cast< ::x2::Command_Order >(order__);
}
inline void Command::set_order_(::x2::Command_Order value) {
  
  order__ = value;
  // @@protoc_insertion_point(field_set:x2.Command.order_)
}

// -------------------------------------------------------------------

// Response

// optional string type_ = 1;
inline void Response::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Response::type_() const {
  // @@protoc_insertion_point(field_get:x2.Response.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.Response.type_)
}
inline void Response::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.Response.type_)
}
inline void Response::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.Response.type_)
}
inline ::std::string* Response::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.Response.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_type_() {
  // @@protoc_insertion_point(field_release:x2.Response.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.Response.type_)
}

// optional uint64 timestamp_ = 2;
inline void Response::clear_timestamp_() {
  timestamp__ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Response::timestamp_() const {
  // @@protoc_insertion_point(field_get:x2.Response.timestamp_)
  return timestamp__;
}
inline void Response::set_timestamp_(::google::protobuf::uint64 value) {
  
  timestamp__ = value;
  // @@protoc_insertion_point(field_set:x2.Response.timestamp_)
}

// optional .x2.Response.Ack ack_ = 3;
inline void Response::clear_ack_() {
  ack__ = 0;
}
inline ::x2::Response_Ack Response::ack_() const {
  // @@protoc_insertion_point(field_get:x2.Response.ack_)
  return static_cast< ::x2::Response_Ack >(ack__);
}
inline void Response::set_ack_(::x2::Response_Ack value) {
  
  ack__ = value;
  // @@protoc_insertion_point(field_set:x2.Response.ack_)
}

// -------------------------------------------------------------------

// LogLevel

// optional string type_ = 1;
inline void LogLevel::clear_type_() {
  type__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogLevel::type_() const {
  // @@protoc_insertion_point(field_get:x2.LogLevel.type_)
  return type__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogLevel::set_type_(const ::std::string& value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:x2.LogLevel.type_)
}
inline void LogLevel::set_type_(const char* value) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:x2.LogLevel.type_)
}
inline void LogLevel::set_type_(const char* value, size_t size) {
  
  type__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:x2.LogLevel.type_)
}
inline ::std::string* LogLevel::mutable_type_() {
  
  // @@protoc_insertion_point(field_mutable:x2.LogLevel.type_)
  return type__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogLevel::release_type_() {
  // @@protoc_insertion_point(field_release:x2.LogLevel.type_)
  
  return type__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogLevel::set_allocated_type_(::std::string* type_) {
  if (type_ != NULL) {
    
  } else {
    
  }
  type__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type_);
  // @@protoc_insertion_point(field_set_allocated:x2.LogLevel.type_)
}

// optional .x2.LogLevel.Level level_ = 2;
inline void LogLevel::clear_level_() {
  level__ = 0;
}
inline ::x2::LogLevel_Level LogLevel::level_() const {
  // @@protoc_insertion_point(field_get:x2.LogLevel.level_)
  return static_cast< ::x2::LogLevel_Level >(level__);
}
inline void LogLevel::set_level_(::x2::LogLevel_Level value) {
  
  level__ = value;
  // @@protoc_insertion_point(field_set:x2.LogLevel.level_)
}

// -------------------------------------------------------------------

// InfoMessage

// optional .x2.Status status_ = 1;
inline bool InfoMessage::has_status_() const {
  return !_is_default_instance_ && status__ != NULL;
}
inline void InfoMessage::clear_status_() {
  if (GetArenaNoVirtual() == NULL && status__ != NULL) delete status__;
  status__ = NULL;
}
inline const ::x2::Status& InfoMessage::status_() const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.status_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return status__ != NULL ? *status__ : *default_instance().status__;
#else
  return status__ != NULL ? *status__ : *default_instance_->status__;
#endif
}
inline ::x2::Status* InfoMessage::mutable_status_() {
  
  if (status__ == NULL) {
    status__ = new ::x2::Status;
  }
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.status_)
  return status__;
}
inline ::x2::Status* InfoMessage::release_status_() {
  // @@protoc_insertion_point(field_release:x2.InfoMessage.status_)
  
  ::x2::Status* temp = status__;
  status__ = NULL;
  return temp;
}
inline void InfoMessage::set_allocated_status_(::x2::Status* status_) {
  delete status__;
  status__ = status_;
  if (status_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.InfoMessage.status_)
}

// optional .x2.Command command_ = 2;
inline bool InfoMessage::has_command_() const {
  return !_is_default_instance_ && command__ != NULL;
}
inline void InfoMessage::clear_command_() {
  if (GetArenaNoVirtual() == NULL && command__ != NULL) delete command__;
  command__ = NULL;
}
inline const ::x2::Command& InfoMessage::command_() const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.command_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return command__ != NULL ? *command__ : *default_instance().command__;
#else
  return command__ != NULL ? *command__ : *default_instance_->command__;
#endif
}
inline ::x2::Command* InfoMessage::mutable_command_() {
  
  if (command__ == NULL) {
    command__ = new ::x2::Command;
  }
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.command_)
  return command__;
}
inline ::x2::Command* InfoMessage::release_command_() {
  // @@protoc_insertion_point(field_release:x2.InfoMessage.command_)
  
  ::x2::Command* temp = command__;
  command__ = NULL;
  return temp;
}
inline void InfoMessage::set_allocated_command_(::x2::Command* command_) {
  delete command__;
  command__ = command_;
  if (command_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.InfoMessage.command_)
}

// optional .x2.LogLevel loglevel_ = 3;
inline bool InfoMessage::has_loglevel_() const {
  return !_is_default_instance_ && loglevel__ != NULL;
}
inline void InfoMessage::clear_loglevel_() {
  if (GetArenaNoVirtual() == NULL && loglevel__ != NULL) delete loglevel__;
  loglevel__ = NULL;
}
inline const ::x2::LogLevel& InfoMessage::loglevel_() const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.loglevel_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return loglevel__ != NULL ? *loglevel__ : *default_instance().loglevel__;
#else
  return loglevel__ != NULL ? *loglevel__ : *default_instance_->loglevel__;
#endif
}
inline ::x2::LogLevel* InfoMessage::mutable_loglevel_() {
  
  if (loglevel__ == NULL) {
    loglevel__ = new ::x2::LogLevel;
  }
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.loglevel_)
  return loglevel__;
}
inline ::x2::LogLevel* InfoMessage::release_loglevel_() {
  // @@protoc_insertion_point(field_release:x2.InfoMessage.loglevel_)
  
  ::x2::LogLevel* temp = loglevel__;
  loglevel__ = NULL;
  return temp;
}
inline void InfoMessage::set_allocated_loglevel_(::x2::LogLevel* loglevel_) {
  delete loglevel__;
  loglevel__ = loglevel_;
  if (loglevel_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.InfoMessage.loglevel_)
}

// optional .x2.Response response_ = 4;
inline bool InfoMessage::has_response_() const {
  return !_is_default_instance_ && response__ != NULL;
}
inline void InfoMessage::clear_response_() {
  if (GetArenaNoVirtual() == NULL && response__ != NULL) delete response__;
  response__ = NULL;
}
inline const ::x2::Response& InfoMessage::response_() const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.response_)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return response__ != NULL ? *response__ : *default_instance().response__;
#else
  return response__ != NULL ? *response__ : *default_instance_->response__;
#endif
}
inline ::x2::Response* InfoMessage::mutable_response_() {
  
  if (response__ == NULL) {
    response__ = new ::x2::Response;
  }
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.response_)
  return response__;
}
inline ::x2::Response* InfoMessage::release_response_() {
  // @@protoc_insertion_point(field_release:x2.InfoMessage.response_)
  
  ::x2::Response* temp = response__;
  response__ = NULL;
  return temp;
}
inline void InfoMessage::set_allocated_response_(::x2::Response* response_) {
  delete response__;
  response__ = response_;
  if (response_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:x2.InfoMessage.response_)
}

// repeated .x2.Config config_ = 5;
inline int InfoMessage::config__size() const {
  return config__.size();
}
inline void InfoMessage::clear_config_() {
  config__.Clear();
}
inline const ::x2::Config& InfoMessage::config_(int index) const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.config_)
  return config__.Get(index);
}
inline ::x2::Config* InfoMessage::mutable_config_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.config_)
  return config__.Mutable(index);
}
inline ::x2::Config* InfoMessage::add_config_() {
  // @@protoc_insertion_point(field_add:x2.InfoMessage.config_)
  return config__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Config >*
InfoMessage::mutable_config_() {
  // @@protoc_insertion_point(field_mutable_list:x2.InfoMessage.config_)
  return &config__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Config >&
InfoMessage::config_() const {
  // @@protoc_insertion_point(field_list:x2.InfoMessage.config_)
  return config__;
}

// repeated .x2.Version version_ = 6;
inline int InfoMessage::version__size() const {
  return version__.size();
}
inline void InfoMessage::clear_version_() {
  version__.Clear();
}
inline const ::x2::Version& InfoMessage::version_(int index) const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.version_)
  return version__.Get(index);
}
inline ::x2::Version* InfoMessage::mutable_version_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.version_)
  return version__.Mutable(index);
}
inline ::x2::Version* InfoMessage::add_version_() {
  // @@protoc_insertion_point(field_add:x2.InfoMessage.version_)
  return version__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Version >*
InfoMessage::mutable_version_() {
  // @@protoc_insertion_point(field_mutable_list:x2.InfoMessage.version_)
  return &version__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Version >&
InfoMessage::version_() const {
  // @@protoc_insertion_point(field_list:x2.InfoMessage.version_)
  return version__;
}

// repeated .x2.Capability capability_ = 7;
inline int InfoMessage::capability__size() const {
  return capability__.size();
}
inline void InfoMessage::clear_capability_() {
  capability__.Clear();
}
inline const ::x2::Capability& InfoMessage::capability_(int index) const {
  // @@protoc_insertion_point(field_get:x2.InfoMessage.capability_)
  return capability__.Get(index);
}
inline ::x2::Capability* InfoMessage::mutable_capability_(int index) {
  // @@protoc_insertion_point(field_mutable:x2.InfoMessage.capability_)
  return capability__.Mutable(index);
}
inline ::x2::Capability* InfoMessage::add_capability_() {
  // @@protoc_insertion_point(field_add:x2.InfoMessage.capability_)
  return capability__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::x2::Capability >*
InfoMessage::mutable_capability_() {
  // @@protoc_insertion_point(field_mutable_list:x2.InfoMessage.capability_)
  return &capability__;
}
inline const ::google::protobuf::RepeatedPtrField< ::x2::Capability >&
InfoMessage::capability_() const {
  // @@protoc_insertion_point(field_list:x2.InfoMessage.capability_)
  return capability__;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace x2

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::x2::Status_RunStatus> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::x2::Command_Order> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::x2::Response_Ack> : ::google::protobuf::internal::true_type {};
template <> struct is_proto_enum< ::x2::LogLevel_Level> : ::google::protobuf::internal::true_type {};

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_x2_2eproto__INCLUDED
